<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Article extends \App\Entity\Article implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Article' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Article' . "\0" . 'titol', '' . "\0" . 'App\\Entity\\Article' . "\0" . 'resum', '' . "\0" . 'App\\Entity\\Article' . "\0" . 'slug', '' . "\0" . 'App\\Entity\\Article' . "\0" . 'meta_tag', '' . "\0" . 'App\\Entity\\Article' . "\0" . 'meta_description', '' . "\0" . 'App\\Entity\\Article' . "\0" . 'contingut', '' . "\0" . 'App\\Entity\\Article' . "\0" . 'html', '' . "\0" . 'App\\Entity\\Article' . "\0" . 'css', '' . "\0" . 'App\\Entity\\Article' . "\0" . 'js', '' . "\0" . 'App\\Entity\\Article' . "\0" . 'categories', '' . "\0" . 'App\\Entity\\Article' . "\0" . 'autor', '' . "\0" . 'App\\Entity\\Article' . "\0" . 'data_publicacio', '' . "\0" . 'App\\Entity\\Article' . "\0" . 'data_actualitzacio', '' . "\0" . 'App\\Entity\\Article' . "\0" . 'comentaris', '' . "\0" . 'App\\Entity\\Article' . "\0" . 'visible'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Article' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Article' . "\0" . 'titol', '' . "\0" . 'App\\Entity\\Article' . "\0" . 'resum', '' . "\0" . 'App\\Entity\\Article' . "\0" . 'slug', '' . "\0" . 'App\\Entity\\Article' . "\0" . 'meta_tag', '' . "\0" . 'App\\Entity\\Article' . "\0" . 'meta_description', '' . "\0" . 'App\\Entity\\Article' . "\0" . 'contingut', '' . "\0" . 'App\\Entity\\Article' . "\0" . 'html', '' . "\0" . 'App\\Entity\\Article' . "\0" . 'css', '' . "\0" . 'App\\Entity\\Article' . "\0" . 'js', '' . "\0" . 'App\\Entity\\Article' . "\0" . 'categories', '' . "\0" . 'App\\Entity\\Article' . "\0" . 'autor', '' . "\0" . 'App\\Entity\\Article' . "\0" . 'data_publicacio', '' . "\0" . 'App\\Entity\\Article' . "\0" . 'data_actualitzacio', '' . "\0" . 'App\\Entity\\Article' . "\0" . 'comentaris', '' . "\0" . 'App\\Entity\\Article' . "\0" . 'visible'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Article $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getTitol(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitol', []);

        return parent::getTitol();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitol(string $titol): \App\Entity\Article
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitol', [$titol]);

        return parent::setTitol($titol);
    }

    /**
     * {@inheritDoc}
     */
    public function getResum(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResum', []);

        return parent::getResum();
    }

    /**
     * {@inheritDoc}
     */
    public function setResum(string $resum): \App\Entity\Article
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setResum', [$resum]);

        return parent::setResum($resum);
    }

    /**
     * {@inheritDoc}
     */
    public function getSlug(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSlug', []);

        return parent::getSlug();
    }

    /**
     * {@inheritDoc}
     */
    public function setSlug(string $slug): \App\Entity\Article
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSlug', [$slug]);

        return parent::setSlug($slug);
    }

    /**
     * {@inheritDoc}
     */
    public function getMetaTag(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetaTag', []);

        return parent::getMetaTag();
    }

    /**
     * {@inheritDoc}
     */
    public function setMetaTag(?string $meta_tag): \App\Entity\Article
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetaTag', [$meta_tag]);

        return parent::setMetaTag($meta_tag);
    }

    /**
     * {@inheritDoc}
     */
    public function getMetaDescription(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMetaDescription', []);

        return parent::getMetaDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setMetaDescription(?string $meta_description): \App\Entity\Article
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMetaDescription', [$meta_description]);

        return parent::setMetaDescription($meta_description);
    }

    /**
     * {@inheritDoc}
     */
    public function getContingut(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContingut', []);

        return parent::getContingut();
    }

    /**
     * {@inheritDoc}
     */
    public function setContingut(string $contingut): \App\Entity\Article
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContingut', [$contingut]);

        return parent::setContingut($contingut);
    }

    /**
     * {@inheritDoc}
     */
    public function getHtml(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHtml', []);

        return parent::getHtml();
    }

    /**
     * {@inheritDoc}
     */
    public function setHtml(?string $html): \App\Entity\Article
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHtml', [$html]);

        return parent::setHtml($html);
    }

    /**
     * {@inheritDoc}
     */
    public function getCss(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCss', []);

        return parent::getCss();
    }

    /**
     * {@inheritDoc}
     */
    public function setCss(?string $css): \App\Entity\Article
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCss', [$css]);

        return parent::setCss($css);
    }

    /**
     * {@inheritDoc}
     */
    public function getJs(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJs', []);

        return parent::getJs();
    }

    /**
     * {@inheritDoc}
     */
    public function setJs(?string $js): \App\Entity\Article
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJs', [$js]);

        return parent::setJs($js);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategories(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategories', []);

        return parent::getCategories();
    }

    /**
     * {@inheritDoc}
     */
    public function addCategories(\App\Entity\Categoria $categoria): \App\Entity\Article
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCategories', [$categoria]);

        return parent::addCategories($categoria);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCategories(\App\Entity\Categoria $categoria): \App\Entity\Article
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCategories', [$categoria]);

        return parent::removeCategories($categoria);
    }

    /**
     * {@inheritDoc}
     */
    public function getAutor(): ?\App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAutor', []);

        return parent::getAutor();
    }

    /**
     * {@inheritDoc}
     */
    public function setAutor(?\App\Entity\User $autor): \App\Entity\Article
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAutor', [$autor]);

        return parent::setAutor($autor);
    }

    /**
     * {@inheritDoc}
     */
    public function getDataPublicacio(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDataPublicacio', []);

        return parent::getDataPublicacio();
    }

    /**
     * {@inheritDoc}
     */
    public function setDataPublicacio(\DateTimeInterface $data_publicacio): \App\Entity\Article
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDataPublicacio', [$data_publicacio]);

        return parent::setDataPublicacio($data_publicacio);
    }

    /**
     * {@inheritDoc}
     */
    public function getDataActualitzacio(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDataActualitzacio', []);

        return parent::getDataActualitzacio();
    }

    /**
     * {@inheritDoc}
     */
    public function setDataActualitzacio(?\DateTimeInterface $data_actualitzacio): \App\Entity\Article
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDataActualitzacio', [$data_actualitzacio]);

        return parent::setDataActualitzacio($data_actualitzacio);
    }

    /**
     * {@inheritDoc}
     */
    public function getComentaris(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getComentaris', []);

        return parent::getComentaris();
    }

    /**
     * {@inheritDoc}
     */
    public function addComentari(\App\Entity\Comentari $comentari): \App\Entity\Article
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addComentari', [$comentari]);

        return parent::addComentari($comentari);
    }

    /**
     * {@inheritDoc}
     */
    public function removeComentari(\App\Entity\Comentari $comentari): \App\Entity\Article
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeComentari', [$comentari]);

        return parent::removeComentari($comentari);
    }

    /**
     * {@inheritDoc}
     */
    public function getVisible(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVisible', []);

        return parent::getVisible();
    }

    /**
     * {@inheritDoc}
     */
    public function setVisible(bool $visible): \App\Entity\Article
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVisible', [$visible]);

        return parent::setVisible($visible);
    }

}
